Setting and Runinng the React JS Project
-----------------------------------------

-> Install node.js,npm,React on system
      command to install React for ubuntu: sudo npm i create-react-app

-> Create the Javascript React Project with following command.
            npx create-react-app /*Project Name*/
            
-> Create the '.env' file inside the project folder created.

-> set the port number in '.env' file create as following.
                  PORT=/*Port number*/
                  
-> Open the terminal inside the project folder and run the following command.
            npm start
            
-> The React server will start on port configured in '.env' file.

Arrow function vs Normal Function
----------------------------------
-> In Arrow function the arguemnt of functions can not be known
-> In arrow function we can not define contructor
-> arrow function does have their own state unlike normal function
-> implicit calling is possible in arrow function
const var=()=>{
  /* syntax of arrow  function*/
}

React Fragments
---------------
It is used to prevent the use of normal <div> tag in outer most component in react project.
This works but it gives some warning messages in some cases like if we use <td> tag of table as <td> tag can not be 
the child of <div> tag, so we use react Fragments

UseEffect
---------
userEffect is use to update the component on upadtion on hooks of component.
useEffect(()=>{
  /*syntax of hooks*/
  callFunction();
},data)

Hooks Syntax
------------
const [data,setData]=useState(props.data.field1);

const vs var vs let
-------------------
var- functional Scope, no intialization, update and re-declared
let- block scope,no intialization, can be updated , can not be re-declared
const- Global, intialization required,can not update of re-declared


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

JS ES6 FEATURE
---------------
1- let and const
2- arrow function
3- default parameter in function
4- Destructuring Assignments

Design Pattern in React
------------------------

1- Presentational and Container Component: Implememt heavy logic component seperately as Container component and render on Presentational component on UI
2- Custom Hook Pattern: Extract Reusuable logic in seperate hook file

3- Controlled and Uncontrolled components:
Controlled : When Parent component decides the state
Uncontrolled: When component manages the state itself
4- Compound Component: useContext
A CDN (Content Delivery Network) is a network of geographically distributed servers that work together to deliver web content quickly and reliably to users, based on their location.
Netlify
Vercel
Firebase Hosting
SSR (Server-Side Rendering) in React refers to the process of rendering React components on the server and sending a fully rendered HTML page to the client (browser).
